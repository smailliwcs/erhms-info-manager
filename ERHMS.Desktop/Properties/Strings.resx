<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessText.AboutApp" xml:space="preserve">
    <value>_About ERHMS Info Manager</value>
  </data>
  <data name="AccessText.AllFields" xml:space="preserve">
    <value>_All fields</value>
  </data>
  <data name="AccessText.Back" xml:space="preserve">
    <value>_Back</value>
  </data>
  <data name="AccessText.BackUp" xml:space="preserve">
    <value>_Back up</value>
  </data>
  <data name="AccessText.Browse" xml:space="preserve">
    <value>_Browse...</value>
  </data>
  <data name="AccessText.Cancel" xml:space="preserve">
    <value>_Cancel</value>
  </data>
  <data name="AccessText.Canvases" xml:space="preserve">
    <value>_Dashboards</value>
  </data>
  <data name="AccessText.CheckIntegrity" xml:space="preserve">
    <value>_Check integrity</value>
  </data>
  <data name="AccessText.Close" xml:space="preserve">
    <value>_Close</value>
  </data>
  <data name="AccessText.CommandPrompt" xml:space="preserve">
    <value>_Command Prompt</value>
  </data>
  <data name="AccessText.Continue" xml:space="preserve">
    <value>_Continue</value>
  </data>
  <data name="AccessText.CopyValue" xml:space="preserve">
    <value>_Copy value to Clipboard</value>
  </data>
  <data name="AccessText.CreateView.Blank" xml:space="preserve">
    <value>Create a _blank form</value>
  </data>
  <data name="AccessText.CreateView.FromExisting" xml:space="preserve">
    <value>Copy an _existing form</value>
  </data>
  <data name="AccessText.CreateView.FromTemplate" xml:space="preserve">
    <value>Create a form based on a _template</value>
  </data>
  <data name="AccessText.Data" xml:space="preserve">
    <value>_Data</value>
  </data>
  <data name="AccessText.DateModified" xml:space="preserve">
    <value>_Date modified</value>
  </data>
  <data name="AccessText.Delete" xml:space="preserve">
    <value>_Delete</value>
  </data>
  <data name="AccessText.Details" xml:space="preserve">
    <value>_Details</value>
  </data>
  <data name="AccessText.EmailAddress" xml:space="preserve">
    <value>_Email address</value>
  </data>
  <data name="AccessText.EpiInfo" xml:space="preserve">
    <value>_Epi Info</value>
  </data>
  <data name="AccessText.Exit" xml:space="preserve">
    <value>E_xit</value>
  </data>
  <data name="AccessText.ExportAll" xml:space="preserve">
    <value>_Export all</value>
  </data>
  <data name="AccessText.Fields" xml:space="preserve">
    <value>F_ields</value>
  </data>
  <data name="AccessText.File" xml:space="preserve">
    <value>_File</value>
  </data>
  <data name="AccessText.FileExplorer" xml:space="preserve">
    <value>F_ile Explorer</value>
  </data>
  <data name="AccessText.Finish" xml:space="preserve">
    <value>_Finish</value>
  </data>
  <data name="AccessText.FullName" xml:space="preserve">
    <value>_Full name</value>
  </data>
  <data name="AccessText.Help" xml:space="preserve">
    <value>_Help</value>
  </data>
  <data name="AccessText.Home" xml:space="preserve">
    <value>H_ome</value>
  </data>
  <data name="AccessText.IncidentProject" xml:space="preserve">
    <value>_Incident database</value>
  </data>
  <data name="AccessText.IncidentReport" xml:space="preserve">
    <value>_Incident report</value>
  </data>
  <data name="AccessText.Logs" xml:space="preserve">
    <value>_Logs</value>
  </data>
  <data name="AccessText.Maps" xml:space="preserve">
    <value>_Maps</value>
  </data>
  <data name="AccessText.Name" xml:space="preserve">
    <value>_Name</value>
  </data>
  <data name="AccessText.New" xml:space="preserve">
    <value>_New</value>
  </data>
  <data name="AccessText.Next" xml:space="preserve">
    <value>_Next</value>
  </data>
  <data name="AccessText.No" xml:space="preserve">
    <value>_No</value>
  </data>
  <data name="AccessText.Ok" xml:space="preserve">
    <value>_OK</value>
  </data>
  <data name="AccessText.Open" xml:space="preserve">
    <value>_Open</value>
  </data>
  <data name="AccessText.Pages" xml:space="preserve">
    <value>_Pages</value>
  </data>
  <data name="AccessText.Pgms" xml:space="preserve">
    <value>_Analyses</value>
  </data>
  <data name="AccessText.Records" xml:space="preserve">
    <value>_Records</value>
  </data>
  <data name="AccessText.Reports" xml:space="preserve">
    <value>_Reports</value>
  </data>
  <data name="AccessText.Restore" xml:space="preserve">
    <value>_Restore</value>
  </data>
  <data name="AccessText.See" xml:space="preserve">
    <value>_View</value>
  </data>
  <data name="AccessText.SeeAll" xml:space="preserve">
    <value>View _all</value>
  </data>
  <data name="AccessText.SeeCurrent" xml:space="preserve">
    <value>View _current</value>
  </data>
  <data name="AccessText.SeeHelp" xml:space="preserve">
    <value>V_iew help</value>
  </data>
  <data name="AccessText.Similarity" xml:space="preserve">
    <value>_Similarity</value>
  </data>
  <data name="AccessText.Size" xml:space="preserve">
    <value>_Size</value>
  </data>
  <data name="AccessText.Tools" xml:space="preserve">
    <value>_Tools</value>
  </data>
  <data name="AccessText.Views" xml:space="preserve">
    <value>F_orms</value>
  </data>
  <data name="AccessText.WorkerId" xml:space="preserve">
    <value>_Worker ID</value>
  </data>
  <data name="AccessText.WorkerProject" xml:space="preserve">
    <value>_Worker database</value>
  </data>
  <data name="AccessText.WorkerReport" xml:space="preserve">
    <value>_Worker report</value>
  </data>
  <data name="AccessText.Yes" xml:space="preserve">
    <value>_Yes</value>
  </data>
  <data name="AltText.Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AltText.ClearSearch" xml:space="preserve">
    <value>Clear search</value>
  </data>
  <data name="AltText.Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="AltText.Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="AltText.Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="AltText.Design" xml:space="preserve">
    <value>Design</value>
  </data>
  <data name="AltText.Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="AltText.Enter" xml:space="preserve">
    <value>Enter</value>
  </data>
  <data name="AltText.Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="AltText.Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="AltText.Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="AltText.Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="AltText.NextPage" xml:space="preserve">
    <value>Next page</value>
  </data>
  <data name="AltText.Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="AltText.PreviousPage" xml:space="preserve">
    <value>Previous page</value>
  </data>
  <data name="AltText.Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="AltText.Undelete" xml:space="preserve">
    <value>Undelete</value>
  </data>
  <data name="AltText.UpToProject" xml:space="preserve">
    <value>Up to database</value>
  </data>
  <data name="App.Logo" xml:space="preserve">
    <value>ERHMS Info Manager logo</value>
  </data>
  <data name="App.Title" xml:space="preserve">
    <value>ERHMS Info Manager</value>
  </data>
  <data name="Body.ConfirmAssetDeletion" xml:space="preserve">
    <value>File: {0}

This file will be moved to the Recycle Bin.</value>
  </data>
  <data name="Body.ConfirmOrphanAssetCreation" xml:space="preserve">
    <value>Location: {0}

ERHMS Info Manager will only recognize files that are in the same location as the current Epi Info project (.prj) file. Continue with this location anyway?</value>
  </data>
  <data name="Body.ConfirmViewDeletion" xml:space="preserve">
    <value>Form: {0}

This form, any related forms, and all associated records will be permanently deleted. This action cannot be undone.</value>
  </data>
  <data name="Body.CreateView.SetWithWorkerInfo" xml:space="preserve">
    <value>If you choose to collect worker information, the new form will contain fields for the worker's name, email address, and unique ID. You can use these fields to link each record with the associated worker.</value>
  </data>
  <data name="Body.FatalError" xml:space="preserve">
    <value>ERHMS Info Manager has encountered an error and must shut down.

{0}</value>
  </data>
  <data name="Body.GetWorkerId" xml:space="preserve">
    <value>Select a worker in ERHMS Info Manager to continue.</value>
  </data>
  <data name="Body.SettingsReset" xml:space="preserve">
    <value>Settings have been reset.</value>
  </data>
  <data name="Body.UtilityClosing" xml:space="preserve">
    <value>ERHMS Info Manager is still working.

Close anyway?</value>
  </data>
  <data name="Body.UtilityError" xml:space="preserve">
    <value>ERHMS Info Manager has encountered an error.

{0}</value>
  </data>
  <data name="Boolean.Name.False" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Boolean.Name.True" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="CoreProject.Name.Incident" xml:space="preserve">
    <value>Incident database</value>
  </data>
  <data name="CoreProject.Name.Worker" xml:space="preserve">
    <value>Worker database</value>
  </data>
  <data name="CoreView.HelpText.AfterActionReview" xml:space="preserve">
    <value>Filled out as necessary after deployment. Captures feedback on the organization's ERHMS program.</value>
  </data>
  <data name="CoreView.HelpText.DeploymentHealthSurvey" xml:space="preserve">
    <value>Filled out at least weekly during deployment for each worker. Captures information on acute health effects.</value>
  </data>
  <data name="CoreView.HelpText.PostDeploymentHealthSurvey" xml:space="preserve">
    <value>Filled out as necessary after deployment. Captures information on chronic health effects.</value>
  </data>
  <data name="CoreView.HelpText.PreDeploymentHealthSurvey" xml:space="preserve">
    <value>Filled out annually for each worker. Captures information on baseline health status.</value>
  </data>
  <data name="CoreView.HelpText.WorkerActivityReport" xml:space="preserve">
    <value>Filled out daily during deployment for each worker. Captures information on work location and activity.</value>
  </data>
  <data name="CoreView.HelpText.WorkerDeploymentRecord" xml:space="preserve">
    <value>Filled out once per deployment for each worker. Captures basic accountability information.</value>
  </data>
  <data name="CoreView.HelpText.WorkerInProcessingForm" xml:space="preserve">
    <value>Filled out once per deployment during mobilization for each worker. Captures information on current health status and training/PPE distribution.</value>
  </data>
  <data name="CoreView.HelpText.WorkerOutProcessingForm" xml:space="preserve">
    <value>Filled out once per deployment during demobilization for each worker. Captures information on training/PPE effectiveness.</value>
  </data>
  <data name="CoreView.HelpText.WorkerRosteringForm" xml:space="preserve">
    <value>Filled out once for each worker and reviewed annually. Captures rostering and credentialing information.</value>
  </data>
  <data name="CoreView.Title.AfterActionReview" xml:space="preserve">
    <value>After-Action Review</value>
  </data>
  <data name="CoreView.Title.DeploymentHealthSurvey" xml:space="preserve">
    <value>Deployment Health Survey</value>
  </data>
  <data name="CoreView.Title.PostDeploymentHealthSurvey" xml:space="preserve">
    <value>Post-Deployment Health Survey</value>
  </data>
  <data name="CoreView.Title.PreDeploymentHealthSurvey" xml:space="preserve">
    <value>Pre-Deployment Health Survey</value>
  </data>
  <data name="CoreView.Title.WorkerActivityReport" xml:space="preserve">
    <value>Worker Activity Report</value>
  </data>
  <data name="CoreView.Title.WorkerDeploymentRecord" xml:space="preserve">
    <value>Worker Deployment Record</value>
  </data>
  <data name="CoreView.Title.WorkerInProcessingForm" xml:space="preserve">
    <value>Worker In-Processing Form</value>
  </data>
  <data name="CoreView.Title.WorkerOutProcessingForm" xml:space="preserve">
    <value>Worker Out-Processing Form</value>
  </data>
  <data name="CoreView.Title.WorkerRosteringForm" xml:space="preserve">
    <value>Worker Rostering Form</value>
  </data>
  <data name="DialogSeverity.Name.Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="DialogSeverity.Name.Information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="DialogSeverity.Name.None" xml:space="preserve">
    <value />
  </data>
  <data name="DialogSeverity.Name.Question" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="DialogSeverity.Name.Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="FileDialog.Filter.Archives" xml:space="preserve">
    <value>ZIP Files (*.zip)|*.zip</value>
  </data>
  <data name="FileDialog.Filter.Canvases" xml:space="preserve">
    <value>Epi Info Dashboards (*.cvs7)|*.cvs7</value>
  </data>
  <data name="FileDialog.Filter.Maps" xml:space="preserve">
    <value>Epi Info Maps (*.map7)|*.map7</value>
  </data>
  <data name="FileDialog.Filter.Pgms" xml:space="preserve">
    <value>Epi Info Analyses (*.pgm7)|*.pgm7</value>
  </data>
  <data name="FileDialog.Filter.Projects" xml:space="preserve">
    <value>Epi Info Projects (*.prj)|*.prj</value>
  </data>
  <data name="FileDialog.Title.Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="FileDialog.Title.Save" xml:space="preserve">
    <value>Save As</value>
  </data>
  <data name="HelpText.AddRecord" xml:space="preserve">
    <value>Add a new record in the Epi Info Enter Data module.</value>
  </data>
  <data name="HelpText.CopyField" xml:space="preserve">
    <value>Copy values to the Clipboard from one or all fields.</value>
  </data>
  <data name="HelpText.CreateAsset" xml:space="preserve">
    <value>Create a new file in Epi Info.</value>
  </data>
  <data name="HelpText.CreateView" xml:space="preserve">
    <value>Create a new form in the Epi Info Form Designer module.</value>
  </data>
  <data name="HelpText.CreateView.Blank" xml:space="preserve">
    <value>Use this option to create a new, blank form. Once the form is created, you can add fields to it.</value>
  </data>
  <data name="HelpText.CreateView.FromExisting" xml:space="preserve">
    <value>Use this option to create a new form containing fields copied from an existing form. The existing form's data will not be copied. Once the form is created, you can add, edit, and remove fields.</value>
  </data>
  <data name="HelpText.CreateView.FromTemplate" xml:space="preserve">
    <value>Use this option to create a new form containing fields defined in an Epi Info template (.xml) file. Once the form is created, you can add, edit, and remove fields.</value>
  </data>
  <data name="HelpText.DeleteAsset" xml:space="preserve">
    <value>Move the selected file to the Recycle Bin.</value>
  </data>
  <data name="HelpText.DeleteRecords" xml:space="preserve">
    <value>Mark the selected records as deleted (without permanently deleting them).</value>
  </data>
  <data name="HelpText.DeleteView" xml:space="preserve">
    <value>Permanently delete the selected form, any related forms, and all associated records.</value>
  </data>
  <data name="HelpText.DesignView" xml:space="preserve">
    <value>Open the selected form in the Epi Info Form Designer module.</value>
  </data>
  <data name="HelpText.EditRecord" xml:space="preserve">
    <value>Edit the selected record in the Epi Info Enter Data module.</value>
  </data>
  <data name="HelpText.EnterView" xml:space="preserve">
    <value>Open the selected form in the Epi Info Enter Data module.</value>
  </data>
  <data name="HelpText.ExportRecords" xml:space="preserve">
    <value>Export records from the current form.</value>
  </data>
  <data name="HelpText.ImportRecords" xml:space="preserve">
    <value>Import records into the current form.</value>
  </data>
  <data name="HelpText.OpenAsset" xml:space="preserve">
    <value>Open the selected file in Epi Info.</value>
  </data>
  <data name="HelpText.OpenView" xml:space="preserve">
    <value>Open the selected form to view and manage associated records.</value>
  </data>
  <data name="HelpText.RefreshAssets" xml:space="preserve">
    <value>Refresh the information displayed on this screen.</value>
  </data>
  <data name="HelpText.RefreshRecords" xml:space="preserve">
    <value>Refresh the information displayed on this screen.</value>
  </data>
  <data name="HelpText.RefreshViews" xml:space="preserve">
    <value>Refresh the information displayed on this screen.</value>
  </data>
  <data name="HelpText.UndeleteRecords" xml:space="preserve">
    <value>Mark the selected records as undeleted.</value>
  </data>
  <data name="InvalidViewNameReason.Body.Empty" xml:space="preserve">
    <value>Please specify a form name.</value>
  </data>
  <data name="InvalidViewNameReason.Body.Identical" xml:space="preserve">
    <value>A form or table with this name already exists in the current database. Please specify a different form name.</value>
  </data>
  <data name="InvalidViewNameReason.Body.InvalidChar" xml:space="preserve">
    <value>Please specify a form name that contains only letters, numbers, and underscores.</value>
  </data>
  <data name="InvalidViewNameReason.Body.InvalidStartChar" xml:space="preserve">
    <value>Please specify a form name that begins with a letter.</value>
  </data>
  <data name="InvalidViewNameReason.Body.Similar" xml:space="preserve">
    <value>A form with a similar name already exists in the current database. To avoid a possible conflict, please specify a different form name.</value>
  </data>
  <data name="InvalidViewNameReason.Body.TooLong" xml:space="preserve">
    <value>Please specify a form name that is no longer than {0} characters.</value>
  </data>
  <data name="InvalidViewNameReason.Lead.Default" xml:space="preserve">
    <value>This form name is invalid</value>
  </data>
  <data name="InvalidViewNameReason.Lead.Empty" xml:space="preserve">
    <value>No form name was specified</value>
  </data>
  <data name="InvalidViewNameReason.Lead.TooLong" xml:space="preserve">
    <value>This form name is too long</value>
  </data>
  <data name="Label.DirectoryPath" xml:space="preserve">
    <value>Location:</value>
  </data>
  <data name="Label.FileName" xml:space="preserve">
    <value>File name:</value>
  </data>
  <data name="Label.Opening" xml:space="preserve">
    <value>Open in Epi Info?</value>
  </data>
  <data name="Label.RecordStatus" xml:space="preserve">
    <value>Record status:</value>
  </data>
  <data name="Label.Search" xml:space="preserve">
    <value>Search:</value>
  </data>
  <data name="Label.View" xml:space="preserve">
    <value>Form:</value>
  </data>
  <data name="Label.ViewName" xml:space="preserve">
    <value>Form name:</value>
  </data>
  <data name="Label.WithWorkerInfo" xml:space="preserve">
    <value>Collect worker information?</value>
  </data>
  <data name="Lead.ConfirmAssetDeletion" xml:space="preserve">
    <value>Are you sure you want to delete this file?</value>
  </data>
  <data name="Lead.ConfirmOrphanAssetCreation" xml:space="preserve">
    <value>The specified location is not supported</value>
  </data>
  <data name="Lead.ConfirmViewDeletion" xml:space="preserve">
    <value>Are you sure you want to delete this form?</value>
  </data>
  <data name="Lead.CreateAsset.Close" xml:space="preserve">
    <value>File has been created</value>
  </data>
  <data name="Lead.CreateAsset.Commit" xml:space="preserve">
    <value>Verify the information below</value>
  </data>
  <data name="Lead.CreateAsset.SetFileInfo" xml:space="preserve">
    <value>Choose a file name and location</value>
  </data>
  <data name="Lead.CreateAsset.SetView" xml:space="preserve">
    <value>Choose a form to analyze</value>
  </data>
  <data name="Lead.CreateView.Blank.SetViewName" xml:space="preserve">
    <value>Enter a form name</value>
  </data>
  <data name="Lead.CreateView.Blank.SetWithWorkerInfo" xml:space="preserve">
    <value>Choose whether to collect worker information</value>
  </data>
  <data name="Lead.CreateView.Close" xml:space="preserve">
    <value>Form has been created</value>
  </data>
  <data name="Lead.CreateView.Commit" xml:space="preserve">
    <value>Verify the information below</value>
  </data>
  <data name="Lead.CreateView.Initialize" xml:space="preserve">
    <value>Choose a type of form to create</value>
  </data>
  <data name="Lead.CreatingAsset" xml:space="preserve">
    <value>Creating file</value>
  </data>
  <data name="Lead.CreatingView" xml:space="preserve">
    <value>Creating form</value>
  </data>
  <data name="Lead.DeletingAsset" xml:space="preserve">
    <value>Deleting file</value>
  </data>
  <data name="Lead.DeletingRecords" xml:space="preserve">
    <value>Deleting records</value>
  </data>
  <data name="Lead.DeletingView" xml:space="preserve">
    <value>Deleting form</value>
  </data>
  <data name="Lead.ExportingLogDirectory" xml:space="preserve">
    <value>Exporting logs</value>
  </data>
  <data name="Lead.ItemsControlWatermark" xml:space="preserve">
    <value>No items found</value>
  </data>
  <data name="Lead.LoadingProject" xml:space="preserve">
    <value>Loading database</value>
  </data>
  <data name="Lead.LoadingView" xml:space="preserve">
    <value>Loading form</value>
  </data>
  <data name="Lead.NonFatalError" xml:space="preserve">
    <value>ERHMS Info Manager has encountered an error</value>
  </data>
  <data name="Lead.RefreshingAssets" xml:space="preserve">
    <value>Refreshing files</value>
  </data>
  <data name="Lead.RefreshingRecords" xml:space="preserve">
    <value>Refreshing records</value>
  </data>
  <data name="Lead.RefreshingViews" xml:space="preserve">
    <value>Refreshing forms</value>
  </data>
  <data name="Lead.StartingEpiInfo" xml:space="preserve">
    <value>Starting Epi Info</value>
  </data>
  <data name="Lead.UndeletingRecords" xml:space="preserve">
    <value>Undeleting records</value>
  </data>
  <data name="Lead.ValidatingViewName" xml:space="preserve">
    <value>Validating form name</value>
  </data>
  <data name="Lead.Working" xml:space="preserve">
    <value>Working...</value>
  </data>
  <data name="Pager.Status" xml:space="preserve">
    <value>Page {0} of {1}</value>
  </data>
  <data name="Phase.Name.Deployment" xml:space="preserve">
    <value>Deployment</value>
  </data>
  <data name="Phase.Name.PostDeployment" xml:space="preserve">
    <value>Post-deployment</value>
  </data>
  <data name="Phase.Name.PreDeployment" xml:space="preserve">
    <value>Pre-deployment</value>
  </data>
  <data name="RecordStatus.Name.Deleted" xml:space="preserve">
    <value>Deleted</value>
  </data>
  <data name="RecordStatus.Name.Null" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="RecordStatus.Name.Undeleted" xml:space="preserve">
    <value>Undeleted</value>
  </data>
</root>
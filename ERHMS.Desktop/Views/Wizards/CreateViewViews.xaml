<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Markup="clr-namespace:ERHMS.Desktop.Markup"
                    xmlns:ViewModels="clr-namespace:ERHMS.Desktop.ViewModels.Wizards"
                    xmlns:Views="clr-namespace:ERHMS.Desktop.Views">
    <DataTemplate DataType="{x:Type ViewModels:CreateViewViewModel+InitializeViewModel}">
        <StackPanel>
            <StackPanel.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource WorkflowButton}" />
            </StackPanel.Resources>
            <Button Command="{Binding CreateBlankCommand}"
                    Content="{Markup:String AccessText.CreateView.Blank}"
                    ToolTip="{Markup:String HelpText.CreateView.Blank}" />
            <Button Command="{Binding CreateFromTemplateCommand}"
                    Content="{Markup:String AccessText.CreateView.FromTemplate}"
                    ToolTip="{Markup:String HelpText.CreateView.FromTemplate}" />
            <Button Command="{Binding CreateFromExistingCommand}"
                    Content="{Markup:String AccessText.CreateView.FromExisting}"
                    ToolTip="{Markup:String HelpText.CreateView.FromExisting}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:CreateViewViewModel+CloseViewModel}">
        <CheckBox Content="{Markup:String Label.OpenInEpiInfo}"
                  IsChecked="{Binding OpenInEpiInfo}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:CreateViewViewModel+Blank+SetViewNameViewModel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0"
                   Content="{Markup:String Label.ViewName}"
                   Target="{x:Reference TextBox}" />
            <TextBox x:Name="TextBox"
                     AutomationProperties.Name="{Markup:String Label.ViewName}"
                     Grid.Column="1"
                     Text="{Binding Text, ElementName=Root, UpdateSourceTrigger=PropertyChanged}" />
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:CreateViewViewModel+Blank+SetWithWorkerInfoViewModel}">
        <StackPanel>
            <Label>
                <TextBlock Text="{Markup:String Body.SetWithWorkerInfo}" />
            </Label>
            <CheckBox Content="{Markup:String Label.WithWorkerInfo}"
                      IsChecked="{Binding WithWorkerInfo}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:CreateViewViewModel+Blank+CommitViewModel}">
        <Views:DetailsView ItemsSource="{Binding Details}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:CreateViewViewModel+FromTemplate+SetXTemplateViewModel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0"
                   Grid.Row="0"
                   Content="{Markup:String Label.TemplatePath}"
                   Target="{x:Reference TextBox}" />
            <TextBox x:Name="TextBox"
                     AutomationProperties.Name="{Markup:String Label.TemplatePath}"
                     Grid.Column="1"
                     Grid.Row="0"
                     IsReadOnly="True"
                     Text="{Binding TemplatePath, Mode=OneWay}" />
            <Button Grid.Column="2"
                    Grid.Row="0"
                    Command="{Binding BrowseCommand}"
                    Content="{Markup:String AccessText.Browse}" />
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:CreateViewViewModel+FromTemplate+SetViewNameViewModel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0"
                   Content="{Markup:String Label.ViewName}"
                   Target="{x:Reference TextBox}" />
            <TextBox x:Name="TextBox"
                     AutomationProperties.Name="{Markup:String Label.ViewName}"
                     Grid.Column="1"
                     Text="{Binding Text, ElementName=Root, UpdateSourceTrigger=PropertyChanged}" />
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:CreateViewViewModel+FromTemplate+CommitViewModel}">
        <Views:DetailsView ItemsSource="{Binding Details}" />
    </DataTemplate>
</ResourceDictionary>

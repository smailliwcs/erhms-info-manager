<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:ERHMS.Desktop.Controls"
                    xmlns:System="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Common.xaml" />
        <ResourceDictionary Source="Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Framework -->
    <Style x:Key="ButtonBase" TargetType="Button">
        <Setter Property="ToolTipService.ShowDuration" Value="{x:Static System:Int32.MaxValue}" />
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Margin" Value="{StaticResource DefaultMargin}" />
        <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    </Style>
    <Style TargetType="Button" BasedOn="{StaticResource ButtonBase}" />

    <Style x:Key="CheckBoxBase" TargetType="CheckBox">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Margin" Value="{StaticResource DefaultMargin}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxBase}" />

    <Style x:Key="ComboBoxBase" TargetType="ComboBox">
        <Style.Resources>
            <Style TargetType="ContentPresenter">
                <Style.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="-2,1" />
                    </Style>
                </Style.Resources>
            </Style>
        </Style.Resources>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Margin" Value="{StaticResource DefaultMargin}" />
        <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    </Style>
    <Style TargetType="ComboBox" BasedOn="{StaticResource ComboBoxBase}" />

    <Style x:Key="ComboBoxItemBase" TargetType="ComboBoxItem">
        <Style.Resources>
            <Style TargetType="ContentPresenter">
                <Style.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="-3,-1" />
                    </Style>
                </Style.Resources>
            </Style>
        </Style.Resources>
        <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    </Style>
    <Style TargetType="ComboBoxItem" BasedOn="{StaticResource ComboBoxItemBase}" />

    <Style x:Key="DataGridBase" TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="GridLinesVisibility" Value="Horizontal" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Margin" Value="{StaticResource DefaultMargin}" />
    </Style>
    <Style TargetType="DataGrid" BasedOn="{StaticResource DataGridBase}" />

    <Style x:Key="DataGridCellBase" TargetType="DataGridCell">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
            </Style>
            <Style TargetType="ContentPresenter">
                <Setter Property="Margin" Value="-2,-1" />
            </Style>
        </Style.Resources>
    </Style>
    <Style TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellBase}" />

    <Style x:Key="DataGridColumnHeaderBase" TargetType="DataGridColumnHeader">
        <Style.Resources>
            <Style TargetType="ContentPresenter">
                <Setter Property="Margin" Value="1,0" />
            </Style>
        </Style.Resources>
        <Setter Property="FontWeight" Value="{StaticResource ThickFontWeight}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    </Style>
    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource DataGridColumnHeaderBase}" />

    <Style x:Key="HyperlinkBase" TargetType="Hyperlink">
        <Setter Property="ToolTip" Value="{Binding NavigateUri, RelativeSource={RelativeSource Self}}" />
    </Style>
    <Style TargetType="Hyperlink" BasedOn="{StaticResource HyperlinkBase}" />

    <Style x:Key="GroupBoxBase" TargetType="GroupBox">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <AccessText FontSize="{StaticResource MediumFontSize}"
                                FontWeight="{StaticResource ThinFontWeight}"
                                Foreground="{x:Static SystemColors.ControlTextBrush}"
                                Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="{StaticResource DefaultMargin}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Border BorderBrush="{x:Static SystemColors.ControlDarkBrush}"
                            BorderThickness="1">
                        <StackPanel>
                            <Border Background="{x:Static SystemColors.ControlBrush}"
                                    BorderBrush="{x:Static SystemColors.ControlDarkBrush}"
                                    BorderThickness="0,0,0,1">
                                <ContentPresenter ContentSource="Header"
                                                  Margin="{StaticResource DefaultPadding}" />
                            </Border>
                            <ContentPresenter Margin="{StaticResource DefaultMargin}" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="GroupBox" BasedOn="{StaticResource GroupBoxBase}" />

    <Style x:Key="LabelBase" TargetType="Label">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0,1" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Margin" Value="{StaticResource DefaultMargin}" />
        <Setter Property="Padding">
            <Setter.Value>
                <Thickness Top="{StaticResource SmallSpace}"
                           Bottom="{StaticResource SmallSpace}" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="UnwrappedLabel" TargetType="Label" BasedOn="{StaticResource LabelBase}" />
    <Style x:Key="WrappedLabel" TargetType="Label" BasedOn="{StaticResource LabelBase}">
        <Style.Resources>
            <Style TargetType="ContentPresenter">
                <Style.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="TextWrapping" Value="Wrap" />
                    </Style>
                </Style.Resources>
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>
        </Style.Resources>
    </Style>
    <Style TargetType="Label" BasedOn="{StaticResource WrappedLabel}" />

    <Style x:Key="MenuBaseBase" TargetType="MenuBase">
        <Setter Property="FontSize" Value="{StaticResource SmallFontSize}" />
    </Style>
    <Style TargetType="ContextMenu" BasedOn="{StaticResource MenuBaseBase}" />
    <Style TargetType="Menu" BasedOn="{StaticResource MenuBaseBase}" />

    <Style x:Key="MenuItemBase" TargetType="MenuItem">
        <Setter Property="ToolTipService.ShowDuration" Value="{x:Static System:Int32.MaxValue}" />
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        <Setter Property="Padding" Value="{StaticResource SmallThickness}" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="MenuItem" BasedOn="{StaticResource MenuItemBase}" />

    <Style x:Key="PasswordBoxBase" TargetType="PasswordBox">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Margin" Value="{StaticResource DefaultMargin}" />
        <Setter Property="Padding" Value="{StaticResource SmallThickness}" />
    </Style>
    <Style TargetType="PasswordBox" BasedOn="{StaticResource PasswordBoxBase}" />

    <Style x:Key="ProgressBarBase" TargetType="ProgressBar">
        <Setter Property="Height" Value="{StaticResource HugeSpace}" />
        <Setter Property="Margin" Value="{StaticResource DefaultMargin}" />
    </Style>
    <Style TargetType="ProgressBar" BasedOn="{StaticResource ProgressBarBase}" />

    <Style x:Key="ScrollViewerBase" TargetType="ScrollViewer">
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>
    <Style TargetType="ScrollViewer" BasedOn="{StaticResource ScrollViewerBase}" />

    <Style x:Key="TabControlBase" TargetType="TabControl">
        <Setter Property="Margin" Value="{StaticResource DefaultMargin}" />
        <Setter Property="Padding" Value="0" />
    </Style>
    <Style TargetType="TabControl" BasedOn="{StaticResource TabControlBase}" />

    <Style x:Key="TabItemBase" TargetType="TabItem">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <AccessText FontSize="{StaticResource MediumFontSize}"
                                FontWeight="{StaticResource ThinFontWeight}"
                                Margin="{StaticResource DefaultMargin}"
                                Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TabItem" BasedOn="{StaticResource TabItemBase}" />

    <Style x:Key="TextBlockBase" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Margin" Value="{StaticResource DefaultMargin}" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="TextBoxBase" TargetType="TextBox">
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Command="Cut" />
                    <MenuItem Command="Copy" />
                    <MenuItem Command="Paste" />
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Margin" Value="{StaticResource DefaultMargin}" />
        <Setter Property="Padding" Value="{StaticResource SmallThickness}" />
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Foreground" Value="{x:Static SystemColors.GrayTextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxBase}" />

    <Style x:Key="ToolTipBase" TargetType="ToolTip">
        <Style.Resources>
            <Style TargetType="ContentPresenter">
                <Style.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="TextWrapping" Value="Wrap" />
                    </Style>
                </Style.Resources>
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>
        </Style.Resources>
        <Setter Property="FontSize" Value="{StaticResource SmallFontSize}" />
        <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    </Style>
    <Style TargetType="ToolTip" BasedOn="{StaticResource ToolTipBase}" />

    <!-- Custom -->
    <Style x:Key="BoundComboBoxBase" TargetType="Controls:BoundComboBox" BasedOn="{StaticResource ComboBoxBase}" />
    <Style TargetType="Controls:BoundComboBox" BasedOn="{StaticResource BoundComboBoxBase}" />

    <Style x:Key="ExpandButtonBase" TargetType="Controls:ExpandButton">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
    </Style>
    <Style TargetType="Controls:ExpandButton" BasedOn="{StaticResource ExpandButtonBase}" />

    <Style x:Key="IconButtonBase" TargetType="Controls:IconButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="AutomationProperties.HelpText" Value="{Binding HelpText, RelativeSource={RelativeSource Self}, TargetNullValue=''}" />
        <Setter Property="AutomationProperties.Name" Value="{Binding AltText, RelativeSource={RelativeSource Self}, TargetNullValue=''}" />
        <Setter Property="FontFamily" Value="{StaticResource IconFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource MediumFontSize}" />
        <Setter Property="Padding">
            <Setter.Value>
                <Thickness Top="{StaticResource SmallSpace}"
                           Bottom="{StaticResource SmallSpace}" />
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip MaxWidth="{StaticResource ToolTipWidth}">
                    <StackPanel>
                        <TextBlock Text="{Binding PlacementTarget.AltText, RelativeSource={RelativeSource FindAncestor, AncestorType=ToolTip}}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontWeight" Value="{StaticResource ThickFontWeight}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PlacementTarget.HelpText, RelativeSource={RelativeSource FindAncestor, AncestorType=ToolTip}}" Value="{x:Null}">
                                            <Setter Property="FontWeight" Value="{StaticResource DefaultFontWeight}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="{Binding PlacementTarget.HelpText, RelativeSource={RelativeSource FindAncestor, AncestorType=ToolTip}}"
                                   Visibility="{Binding PlacementTarget.HelpText, RelativeSource={RelativeSource FindAncestor, AncestorType=ToolTip}, Converter={StaticResource NullableToVisibilityConverter}}">
                            <TextBlock.Margin>
                                <Thickness Top="{StaticResource SmallSpace}" />
                            </TextBlock.Margin>
                        </TextBlock>
                    </StackPanel>
                </ToolTip>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
    </Style>
    <Style TargetType="Controls:IconButton" BasedOn="{StaticResource IconButtonBase}" />
</ResourceDictionary>
